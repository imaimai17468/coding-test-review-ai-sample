---
description:
globs:
alwaysApply: true
---
# フロントエンドコードレビュー評価システム

このルールファイルでは、フロントエンドコーディング試験の評価基準とチェック項目を定義します。

## 評価基準

### 評価段階

#### S評価 (優秀合格)
例:
- 必須チェック項目を**すべて**満たしている
- Goodチェック項目を**60%以上**満たしている
- 改善点が**非常に少ない**（5項目以下）
- 以下の分野において**特に優れた実装**が見られる：
  - 例: アーキテクチャ設計（Container/Presentational/Hooksパターンの適切な一貫した実装）
- 実務で即戦力として高いレベルで貢献できるコード品質と判断できる

#### A評価 (合格)
例:
- 必須チェック項目を**すべて**満たしている
- Goodチェック項目を**40%以上**満たしている
- 改善点が**比較的少ない**（10項目以下）
- 標準を超えるコード品質や設計が見られる

#### B評価 (不合格)
例:
- 必須チェック項目を**80%以上**満たしている
- Goodチェック項目をいくつか満たしている
- 改善点が**標準的**（20項目以下）
- 基本的なコード品質や設計が確保されている
- 企業が求めるレベルには達していない

#### NG評価 (不合格)
例:
- 必須チェック項目の達成率が**80%未満**
- Goodチェック項目をほとんど満たしていない
- 改善点が**多数ある**（20項目超）
- コードの品質や設計に重大な問題がある
- 以下のいずれかに該当する場合は自動的にNG評価:
  - 例: テストが書かれていない

### 総合評価の算出方法

例:
1. 必須チェック項目: 各項目1点、合計 XX 点満点
2. Goodチェック項目: 各項目0.5点、合計 XX 点満点
3. 改善点: 各項目 -XX 点（減点方式）
4. 特別加点項目: 特に優れた実装に対して最大 X 点の追加ボーナス

**総合点 = 必須項目の点数 + Goodチェック項目の点数 - 改善点の減点 + 特別加点**

### 評価の目安と合否判定
- **S評価**: XX 点以上かつ特別加点項目あり
- **A評価**: XX 〜 XX 点
- **B評価**: XX 〜 XX 点
- **NG評価**: XX 点未満

**重要**: 合格基準はA評価以上です。

## チェック項目

### 必須チェック項目

#### 動作確認（デザイン・挙動）
- `google-chrome-compatible`: Google Chrome最新版で正常に動作すること
- ...

#### コード
- `formatter-used`: フォーマッターが導入されていること
- ...

### Goodチェック項目

#### 動作確認（デザイン・挙動）
- `original-design`: 独自にワイヤーフレームを解釈してデザイン・実装している
- ...

#### 設計・スタイリング
- `component-granularity`: コンポーネント分割の粒度が適切である
- ...

#### 保守・運用
- `unit-tests`: Unit Test を書いている
- ...

#### React / Next.js
- `react-hooks`: Hooks を使っている
- ...

#### Vue / Nuxt
- `composition-api`: Composition APIを使用している
- ...

#### コード全般
- `detailed-readme`: README が充実している
- ...

### 改善点チェック項目

#### 動作確認（デザイン・挙動）
- `layout-broken-on-resize`: 画面のリサイズで崩れる箇所がある（軽微）
- ...

#### コンポーネント設計・スタイリング全般
- `complex-component-logic`: 複雑なビジネスロジックがコンポーネントに存在している
- ...

#### フレームワーク・ライブラリ固有
- `unnecessary-jsx-files`: JSXを使用していないのに.jsx/.tsx拡張子を使っている
- ...

#### TypeScript
- `inconsistent-type-interface`: Type と interface の使い分けに一貫性がない
- ...

#### マークアップとスタイリング
- `id-based-styling`: class でなく id 指定でスタイリングしている
- ...

#### ファイル・ライブラリ管理
- `missing-env-docs`: 環境変数についてのドキュメンテーションがない
- ...

#### コード品質全般
- `var-declarations`: var で変数宣言している
- ...

#### 重大な問題
- `failing-tests`: テストが失敗している
- ...

## S評価判定のための詳細指針

S評価を判定する際、以下の点を特に注目して評価します：

例:
### アーキテクチャと設計
- Container/Presentationalパターンが全体を通して一貫しているか
- ...

### パフォーマンスとUX
- Lighthouseスコアが全項目で90点以上（特にCLSスコアが高いか）
- ...

### テスト品質
- テストの網羅性（基本機能、エラーケース、エッジケースなど）
- ...

### コード品質
- 命名が意図を明確に伝えているか
- ...

### 開発プロセス
- CI/CDが適切に構築されているか
- ...
